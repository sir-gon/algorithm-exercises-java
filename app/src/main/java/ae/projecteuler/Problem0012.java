// CHECKSTYLE.OFF: JavadocParagraph
/**
 * Highly divisible triangular number
 *
 * https://projecteuler.net/problem=12
 *
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over
 * five hundred divisors?
 */

package ae.projecteuler;

import ae.projecteuler.helper.Divisors;

/**
 * Problem 0012.
 */
public class Problem0012 {

  static java.util.logging.Logger logger = ae.projecteuler.util.CustomLogger.getLogger();

  /**
   * Problem 0012.
   */
  public static Long problem0012(Long _top) {
    Long count = (long) 0;
    Long triangular = (long) 0;
    Long i = (long) 1;

    Long[] d;

    while (count < _top) {
      triangular += i;
      d = Divisors.divisors(triangular);

      logger.fine(String.format("Triangular number: %d has %d divisors", triangular, d.length));

      if (d.length > count) {
        count = (long) d.length;
      }

      i += 1;
    }

    logger.info(String.format("Problem 00012 solved: %d", count));

    return count;
  }
}

//CHECKSTYLE.ON: JavadocParagraph
